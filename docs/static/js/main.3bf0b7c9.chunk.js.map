{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputvalue","setinputvalue","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,uBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAACS,GAAD,OAASP,GAAT,mBAAwBO,OACtCN,EAAc,MAKlB,UACI,sDACA,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBY,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAC,WAAMC,GAAN,uBAAAC,EAAA,6DACXC,EADW,iDACmCC,UAAUH,GAD7C,+DAECI,MAAMF,GAFP,cAEXG,EAFW,gBAGGA,EAAKC,OAHR,uBAGVC,EAHU,EAGVA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATxB,kBAaVM,GAbU,4CAAD,sDCEPO,EAAe,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAiBtC,OAXAC,qBAAW,WACPxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAInB,CAACpB,IAEIqB,EDdyBK,CAAa1B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAErB,OACI,qCACA,6BAAKpB,IACJoB,GAAW,mBAAGJ,UAAU,wCAAb,yBAEZ,qBAAKA,UAAU,YAAf,SACKH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEZhBgB,EAAe,WAAO,IAAD,EACMzC,mBAAS,CAAC,cADhB,mBACvB0C,EADuB,KACX3C,EADW,KAQ9B,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAExB2C,EAAWnB,KAAI,SAACT,GAAD,OAAa,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,MCb1D6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.3bf0b7c9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputvalue, setinputvalue] = useState('');\r\n\r\n    const handleTextValue = (e) =>{\r\n        setinputvalue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if (inputvalue.trim().length > 2){\r\n            setCategories((cate)=>[inputvalue, ...cate]);\r\n            setinputvalue('');   \r\n        }  \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2>Agregar categor√≠a</h2>\r\n            <input \r\n                type=\"text\"\r\n                value={inputvalue}\r\n                onChange={handleTextValue}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","export const getGifs=async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=6UoxCbcilaEHahV39HLn9FJ9nSdN0brz`;\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n\r\n    const gifs=data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ( {id, title, url} ) => {\r\n    // console.log(title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data: images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        {loading && <p className=\"card animate__animated animate__flash\">Cargando...</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            {images.map((img) => (\r\n                <GiftGridItem \r\n                    key={img.id}\r\n                    {...img}\r\n                />\r\n            )  \r\n            )}\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect (() => {\r\n        getGifs(category)\r\n        .then(imgs => {\r\n            setstate({\r\n                data: imgs,\r\n                loading: false\r\n                })\r\n        })\r\n            \r\n    },[category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    \r\n    // const handleAdd = ()=>{\r\n    //     //setCategories([...categories, 'HunterXHunter'] );\r\n    //     setCategories(cats =>[...cats, 'HunterXHunter'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setCategories={setCategories}/>\r\n            {\r\n                categories.map((category)=> <GifGrid key={category} category={category}/>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}